1、最小的存储单位是位（bit），一个字节（byte）为8位；
2、凡是加了小数点的数均是浮点型数；浮点数不能表示区域内所有的值，浮点数往往只是实际值的近似；浮点数运算比整数运算慢；
3、前缀0X或0x表示使用16进制，前缀0表示8进制，16进制printf输出用%x，8进制用%o;
4、一般情况下，long long类型为64位，long类型为32位，short类型为16位，int类型为16位或32位；
5、常量后缀l或L，表示视为long型；
6、传递参数时，C自动将short类型转换为int类型，int类型是计算机处理起来最方便有效的整数类型；
7、char类型用于存储字母和标点之类的符号，char类型实际存储的是整数而不是字符，最常用的编码是ASICII码，char位数为一个字节；
8、使用char类型时，最好使用字符常量，而不是数值常量，因为不一定使用ASCII码；
9、使用%c打印一个字符；
10、无论默认char类型是什么，signed char指有符号类型，unsigned char指无符号类型，只处理字符用标准不带修饰词char类型；
11、inttypes.h创建了各种整型名字，如uint32_t；
12、C标准规定，float类型必须至少能表示6位有效数字，取值范围至少为10^-37到10^37;6位有效数字指精确像33.333333这样的数字前6位；
13、系统使用32位存储一个浮点数，8位用于表示指数及其符号，24位用于表示非指数部分及其符号；
14、double类型与float型最小取值范围要求相同，但它要求至少能表示10位有效数字；double一般为64位，多出的32位全部用于尾数部分；
15、浮点常量可以省略正号，可以没有小数点或指数部分，但二者不能同时省略，不能有空格；
16、可通过后缀f或F将浮点常量转为float型，l或L将转为long double型；%e打印指数记法数字；
17、float和double类型输出均使用%f、%e或%a说明符；未显式说明参数类型时，C自动将float类型参数转换为double型；
18、复数类型：float_Complex、double——Complex、long double_Complex;
19、虚数类型：float_Imaginary、double——Imaginary、long double_Imaginary;
20、sizeof函数以字节为单位给出类型的大小；
21、浮点数转换为整数时，C简单的丢弃小数部分；
22、printf类型说明符错误时，不会转换类型，会显示错误的值；
